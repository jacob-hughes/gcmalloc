// Run-time:
//  status: error
//  stderr: ...
//      ...Invalid read...
//      ...
//      ...valgrind_basic_memory_reclamation.rs:37...
//      ...
//      ...Invalid read...
//      ...
//      ...valgrind_basic_memory_reclamation.rs:38...
//      ...
//      ...Invalid read...
//      ...
//      ...valgrind_basic_memory_reclamation.rs:39...
//      ...

extern crate gcmalloc;

use gcmalloc::{DebugFlags, Gc};

struct S {
    a: usize,
    b: usize,
}

fn main() {
    gcmalloc::debug_flags(DebugFlags::new().mark_phase(false));

    let x = Gc::new(123 as usize);
    let y = Gc::new(S { a: 10, b: 20 });
    let z = Gc::new("hello".to_string());

    gcmalloc::collect();

    // We assert in this test that the following use-after-frees are picked up
    // by valgrind:
    let tmp = *x + 5;
    let tmp = y.a + y.b;
    let tmp = [z.as_str(), "world"].concat();
}
